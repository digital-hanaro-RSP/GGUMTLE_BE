plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.1'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'jacoco'
}

group = 'com.hana4'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // hibernate validator
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    //h2
    implementation 'com.h2database:h2'

    // security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.security:spring-security-test'

    // jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // SwaggerUI
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.3'

    // Redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // sms
    implementation 'net.nurigo:sdk:4.3.2'
    //aws
    implementation platform('software.amazon.awssdk:bom:2.20.83')
    implementation 'software.amazon.awssdk:s3'
    implementation 'io.awspring.cloud:spring-cloud-aws-starter-secrets-manager:3.0.1'
    implementation 'io.awspring.cloud:spring-cloud-aws-starter:3.0.1'
    implementation 'software.amazon.awssdk:s3:2.20.57'
    implementation 'software.amazon.awssdk:auth:2.20.57'
}

tasks.named('test') {
    useJUnitPlatform()
}

test {
    finalizedBy jacocoTestReport
}
jacocoTestReport {
    dependsOn test
}
check.dependsOn jacocoTestReport

jacocoTestCoverageVerification {
    violationRules {
        rule {
            element = 'CLASS'

            limit {
                counter = 'BRANCH'
                value = 'COVEREDRATIO'
                minimum = 0.80
            }
        }
    }
}

jar {
    enabled = false
}

//actuator
springBoot {
    buildInfo()
}
